{"version":3,"sources":["components/About.js","utils/Constants.js","contexts/ConfigContext.js","components/Config.js","components/Navigation.js","services/DownloadService.js","components/Downloader.js","components/ExistingDownload.js","components/ExistingDownloads.js","App.js","reportWebVitals.js","index.js"],"names":["About","useState","show","setShow","handleClose","Fragment","Button","variant","onClick","className","Modal","onHide","Header","Title","Body","href","src","border","alt","Footer","Constants","LOCALSTORAGE_SERVER_URL_KEY","ConfigContext","createContext","ConfigProvider","props","serverUrl","userMailId","configs","setConfigs","useEffect","stateFromLocalStorage","localStorage","getItem","JSON","parse","setItem","stringify","Provider","value","children","Config","useContext","localConfigHolder","setLocalConfigHolder","handleConfigChanged","e","target","name","InputGroup","Prepend","Text","FormControl","placeholder","onChange","aria-label","type","Navigation","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","style","display","downloadUrl","axios","get","fileId","delete","Downloader","setDownloadUrl","Append","loadProgressBar","DownloadService","downloadFile","then","catch","err","alert","ExistingDownload","existingDownload","setExistingDownload","item","getButtonsDisabledStatus","status","disabled","window","open","middlemanUrl","deleteFile","ExistingDownloads","existingDownloads","setExistingDownloads","fetchExisting","getExistingDownloads","response","data","_embedded","middlemanDocs","Accordion","defaultActiveKey","Row","Col","Table","striped","bordered","hover","length","map","aDownload","colSpan","App","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kTA8CeA,MA1Cf,WACC,MAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAc,kBAAMD,GAAQ,IAGlC,OACC,eAAC,IAAME,SAAP,WACC,eAACC,EAAA,EAAD,CAAQC,QAAQ,aAAaC,QAJZ,kBAAML,GAAQ,IAI/B,UACC,mBAAGM,UAAU,iBADd,kBAIA,eAACC,EAAA,EAAD,CAAOR,KAAMA,EAAMS,OAAQP,EAA3B,UACC,cAACM,EAAA,EAAME,OAAP,UACC,eAACF,EAAA,EAAMG,MAAP,WACC,mBAAGJ,UAAU,iBADd,oBAID,cAACC,EAAA,EAAMI,KAAP,UACC,sBAAKL,UAAU,qBAAf,UACC,sBAAKA,UAAU,gCAAf,uCAC2B,sBAAMA,UAAU,oEAAhB,oBAD3B,MAC2H,IAC1H,mBAAGA,UAAU,OAAOM,KAAK,4CAAzB,sCAID,uBACA,qBAAKN,UAAU,gCAAf,SAEC,qBAAKO,IAAI,mEAAmEC,OAAO,IAAIR,UAAU,aAAaS,IAAI,2BAIrH,cAACR,EAAA,EAAMS,OAAP,UACC,cAACb,EAAA,EAAD,CAAQC,QAAQ,OAAOC,QAASJ,EAAhC,4B,gCClCUgB,EAJG,CACjBC,4BAA6B,4BCEjBC,EAAgBC,0BAEhBC,EAAiB,SAACC,GAC9B,MAA8BxB,mBAAS,CAAEyB,UAAW,GAAIC,WAAY,KAApE,mBAAOC,EAAP,KAAgBC,EAAhB,KAkBA,OAdAC,qBAAU,WACT,IAAMC,EAAwBC,aAAaC,QAAQb,EAAUC,6BACzDU,GACHF,EAAWK,KAAKC,MAAMJ,MAErB,IAKHD,qBAAU,WACTE,aAAaI,QAAQhB,EAAUC,4BAA6Ba,KAAKG,UAAUT,MACzE,CAACA,IAEG,cAACN,EAAcgB,SAAf,CAAwBC,MAAO,CAACX,EAASC,GAAzC,SAAuDJ,EAAMe,YCuEtDC,MA1Ff,WAIC,MAA8BC,qBAAWpB,GAAzC,mBAAOM,EAAP,KAAgBC,EAAhB,KAKA,EAAwB5B,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAKA,EAAkDF,mBAAS,IAA3D,mBAAO0C,EAAP,KAA0BC,EAA1B,KAKMxC,EAAc,kBAAMD,GAAQ,IAc5B0C,EAAsB,SAACC,GAC5BF,EAAqB,2BAAKhB,GAAN,kBAAgBkB,EAAEC,OAAOC,KAAOF,EAAEC,OAAOR,UAW9D,OACC,eAAC,IAAMlC,SAAP,WACC,eAACC,EAAA,EAAD,CAAQC,QAAQ,aAAaC,QAvBZ,WAClBoC,EAAqB,eAAKhB,IAC1BzB,GAAQ,IAqBP,UACC,mBAAGM,UAAU,eADd,gBAIA,eAACC,EAAA,EAAD,CAAOR,KAAMA,EAAMS,OAAQP,EAA3B,UACC,cAACM,EAAA,EAAME,OAAP,UACC,eAACF,EAAA,EAAMG,MAAP,WACC,mBAAGJ,UAAU,eADd,kBAID,cAACC,EAAA,EAAMI,KAAP,UACC,sBAAKL,UAAU,qBAAf,UACC,eAACwC,EAAA,EAAD,WACC,cAACA,EAAA,EAAWC,QAAZ,UACC,eAACD,EAAA,EAAWE,KAAZ,WACC,mBAAG1C,UAAU,qBADd,sBAID,cAAC2C,EAAA,EAAD,CAAaC,YAAY,+BAA+BL,KAAK,YAAYT,MAAOI,EAAkBjB,UAAW4B,SAAUT,EAAqBU,aAAW,kBAExJ,uBACA,eAACN,EAAA,EAAD,WACC,cAACA,EAAA,EAAWC,QAAZ,UACC,eAACD,EAAA,EAAWE,KAAZ,WACC,mBAAG1C,UAAU,mBADd,wBAID,cAAC2C,EAAA,EAAD,CAAaI,KAAK,QAAQH,YAAY,eAAeL,KAAK,aAAaT,MAAOI,EAAkBhB,WAAY2B,SAAUT,EAAqBU,aAAW,uBAIzJ,eAAC7C,EAAA,EAAMS,OAAP,WACC,eAACb,EAAA,EAAD,CAAQC,QAAQ,SAASC,QAASJ,EAAlC,UACC,mBAAGK,UAAU,mBADd,eAGA,eAACH,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QA1CX,WAClBqB,EAAWc,GACXvC,KAwCG,UACC,mBAAGK,UAAU,eADd,wBC9DUgD,MAnBf,WACC,OACC,gCACC,eAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAA1B,UACC,cAACF,EAAA,EAAOG,MAAR,wBACA,cAACH,EAAA,EAAOI,OAAR,CAAeC,gBAAc,eAC7B,cAACL,EAAA,EAAOM,SAAR,CAAiBC,GAAG,aAApB,SACC,eAACC,EAAA,EAAD,CAAKzD,UAAU,UAAf,UACC,cAAC,EAAD,IACA,cAAC,EAAD,YAKH,qBAAKO,IAAI,iEAAiEmD,MAAO,CAAEC,QAAS,QAAUlD,IAAI,wB,iCCL9F,M,4FAbd,SAAaQ,EAAW2C,GACvB,OAAOC,IAAMC,IAAI7C,EAAY,yBAA2B2C,K,kCAGzD,SAAqB3C,GACpB,GAAkB,KAAdA,EAAkB,OAAO4C,IAAMC,IAAI7C,EAAY,iC,wBAGpD,SAAWA,EAAW8C,GACrB,GAAkB,KAAd9C,EAAkB,OAAO4C,IAAMG,OAAO/C,EAAY,sBAAwB8C,O,cCyCjEE,G,MA7CI,WAClB,MAAsCzE,mBAAS,IAA/C,mBAAOoE,EAAP,KAAoBM,EAApB,KACA,EAAkBjC,qBAAWpB,GAAtBM,EAAP,oBAuBA,OACC,eAAC,IAAMvB,SAAP,WACC,0DACA,eAAC4C,EAAA,EAAD,WACC,cAACA,EAAA,EAAWC,QAAZ,UACC,cAACD,EAAA,EAAWE,KAAZ,UACC,mBAAG1C,UAAU,yBAGf,cAAC2C,EAAA,EAAD,CAAaC,YAAY,eAAed,MAAO8B,EAAaf,SA9B9B,SAACR,GACjC6B,EAAe7B,EAAEC,OAAOR,QA6B0EgB,aAAW,iBAC3G,cAACN,EAAA,EAAW2B,OAAZ,UACC,eAACtE,EAAA,EAAD,CAAQE,QA5BkB,WACT,KAAhB6D,GACHQ,4BACAC,EAAgBC,aAAanD,EAAQF,UAAW2C,GAC9CW,MAAK,WAELL,EAAe,OAEfM,OAAM,SAACC,GAEPC,MAAM,4BAA8BD,OAGtCC,MAAM,gCAeoC3B,KAAK,SAA7C,UACC,mBAAG/C,UAAU,mBADd,sC,gCCUU2E,EAhDU,SAAC3D,GACzB,MAAkBiB,qBAAWpB,GAAtBM,EAAP,oBAEA,EAAgD3B,mBAAS,IAAzD,mBAAOoF,EAAP,KAAyBC,EAAzB,KAEAxD,qBAAU,WACTwD,EAAoB7D,EAAM8D,QACxB,CAAC9D,EAAM8D,OAEV,IAMMC,EAA2B,WAChC,MAAgC,SAA5BH,EAAiBI,QAYtB,OACC,qBAAIhF,UAnB4B,SAA5B4E,EAAiBI,OAA0B,gBACf,gBAA5BJ,EAAiBI,OAAiC,gBACtB,UAA5BJ,EAAiBI,OAA2B,oBAAhD,EAiBA,UACC,6BACC,mBAAG1E,KAAMsE,EAAiBhB,YAA1B,SAAwCgB,EAAiBhB,gBAE1D,6BAAKgB,EAAiBI,SACtB,6BACC,eAACnF,EAAA,EAAD,CAAQC,QAAQ,UAAUmF,SAAUF,IAA4BhF,QAfjC,WACjCmF,OAAOC,KAAKP,EAAiBQ,eAc3B,UACC,mBAAGpF,UAAU,mBADd,oBAID,6BACC,eAACH,EAAA,EAAD,CAAQC,QAAQ,SAASmF,SAAUF,IAA4BhF,QAhBlC,WAC/BsE,EAAgBgB,WAAWlE,EAAQF,UAAW2D,EAAiBpB,KAe7D,UACC,mBAAGxD,UAAU,gBADd,sBCgCWsF,EAvEW,WAIzB,MAAkBrD,qBAAWpB,GAAtBM,EAAP,oBAKA,EAAkD3B,mBAAS,IAA3D,mBAAO+F,EAAP,KAA0BC,EAA1B,KAKMC,EAAgB,WACjBtE,EAAQF,WACXoD,EAAgBqB,qBAAqBvE,EAAQF,WAAWsD,MAAK,SAACoB,GAC7DH,EAAqBG,EAASC,KAAKC,UAAUC,mBAQhDzE,oBAAUoE,EAAe,CAACtE,EAAQF,YAiBlC,OACC,eAAC8E,EAAA,EAAD,CAAWC,iBAAiB,IAA5B,UACC,eAACC,EAAA,EAAD,WACC,cAACC,EAAA,EAAD,UACC,sDAED,cAACA,EAAA,EAAD,UACC,eAACrG,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAAS0F,EAAezF,UAAU,YAA5D,UACC,mBAAGA,UAAU,uBADd,iBAKF,cAACiG,EAAA,EAAD,UACC,eAACE,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACC,gCACC,+BACC,uDACA,wCACA,yDACA,4DAGF,gCAjC8B,IAA7Bf,EAAkBgB,OACdhB,EAAkBiB,KAAI,SAACC,GAAD,OAAe,cAAC,EAAD,CAAkB3B,KAAM2B,GAAgBA,EAAUjD,OAG7F,6BACC,oBAAIkD,QAAS,EAAb,gECnBUC,MAbf,WACC,OACC,cAACC,EAAA,EAAD,UACC,eAAC,EAAD,WACC,cAAC,EAAD,IACA,cAAC,EAAD,IACA,uBACA,cAAC,EAAD,UCLWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxC,MAAK,YAAkD,IAA/CyC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b305de31.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport \"../css/heart.css\";\n\nfunction About() {\n\tconst [show, setShow] = useState(false);\n\n\tconst handleClose = () => setShow(false);\n\tconst handleShow = () => setShow(true);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Button variant=\"navbar-btn\" onClick={handleShow}>\n\t\t\t\t<i className=\"bi bi-person\"></i>&nbsp;About Me\n\t\t\t</Button>\n\n\t\t\t<Modal show={show} onHide={handleClose}>\n\t\t\t\t<Modal.Header>\n\t\t\t\t\t<Modal.Title>\n\t\t\t\t\t\t<i className=\"bi bi-person\"></i>&nbsp;About Me\n\t\t\t\t\t</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<div className=\"d-flex flex-column\">\n\t\t\t\t\t\t<div className=\"d-flex justify-content-center\">\n\t\t\t\t\t\t\tDesigned & Developed with <span className=\"heart animate__animated animate__heartBeat animate__infinite px-1\">â™¥</span> by{\" \"}\n\t\t\t\t\t\t\t<a className=\"px-1\" href=\"https://github.com/anushibin007/middleman\">\n\t\t\t\t\t\t\t\tAnu Shibin Joseph Raj\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<div className=\"d-flex justify-content-center\">\n\t\t\t\t\t\t\t{/* This line shows the actual counter */}\n\t\t\t\t\t\t\t<img src=\"https://www.freevisitorcounters.com/en/counter/render/836517/t/0\" border=\"0\" className=\"counterimg\" alt=\"Visitor Counter\"></img>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button variant=\"info\" onClick={handleClose}>\n\t\t\t\t\t\tClose\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t</React.Fragment>\n\t);\n}\nexport default About;\n","const Constants = {\n\tLOCALSTORAGE_SERVER_URL_KEY: \"MIDDLEMAN_SERVER_URL_KEY\",\n};\n\nexport default Constants;\n","import React, { createContext, useEffect, useState } from \"react\";\nimport Constants from \"../utils/Constants\";\n\nexport const ConfigContext = createContext();\n\nexport const ConfigProvider = (props) => {\n\tconst [configs, setConfigs] = useState({ serverUrl: \"\", userMailId: \"\" });\n\t/**\n\t * Try to load the configs for the first time from local storage\n\t */\n\tuseEffect(() => {\n\t\tconst stateFromLocalStorage = localStorage.getItem(Constants.LOCALSTORAGE_SERVER_URL_KEY);\n\t\tif (stateFromLocalStorage) {\n\t\t\tsetConfigs(JSON.parse(stateFromLocalStorage));\n\t\t}\n\t}, []);\n\n\t/**\n\t * Every time the config changes, store it to local storage\n\t */\n\tuseEffect(() => {\n\t\tlocalStorage.setItem(Constants.LOCALSTORAGE_SERVER_URL_KEY, JSON.stringify(configs));\n\t}, [configs]);\n\n\treturn <ConfigContext.Provider value={[configs, setConfigs]}>{props.children}</ConfigContext.Provider>;\n};\n","import React, { useState, useContext } from \"react\";\nimport { Button, Modal, InputGroup, FormControl } from \"react-bootstrap\";\nimport \"../css/heart.css\";\nimport { ConfigContext } from \"../contexts/ConfigContext\";\n\nfunction Config() {\n\t/**\n\t * Get the config from the global context\n\t */\n\tconst [configs, setConfigs] = useContext(ConfigContext);\n\n\t/**\n\t * State that holds whether the modal is shown or not\n\t */\n\tconst [show, setShow] = useState(false);\n\n\t/**\n\t * Use a local variable to store the configuration. This will be permanently written to the context variable only when clicking \"Save\"\n\t */\n\tconst [localConfigHolder, setLocalConfigHolder] = useState({});\n\n\t/**\n\t * Closing the Config Modal\n\t */\n\tconst handleClose = () => setShow(false);\n\n\t/**\n\t * Opening the Config Modal. This will also copy the configs from the global context into the local variable\n\t */\n\tconst handleShow = () => {\n\t\tsetLocalConfigHolder({ ...configs });\n\t\tsetShow(true);\n\t};\n\n\t/**\n\t * Whenever the config is updated on the UI, just store it into the local variable.\n\t * Wait till the Save button is clicked. Then copy it to the global context.\n\t */\n\tconst handleConfigChanged = (e) => {\n\t\tsetLocalConfigHolder({ ...configs, [e.target.name]: e.target.value });\n\t};\n\n\t/**\n\t * Save the local config into the Global Context\n\t */\n\tconst handleSave = () => {\n\t\tsetConfigs(localConfigHolder);\n\t\thandleClose();\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Button variant=\"navbar-btn\" onClick={handleShow}>\n\t\t\t\t<i className=\"bi bi-gear\"></i>&nbsp;Config\n\t\t\t</Button>\n\n\t\t\t<Modal show={show} onHide={handleClose}>\n\t\t\t\t<Modal.Header>\n\t\t\t\t\t<Modal.Title>\n\t\t\t\t\t\t<i className=\"bi bi-gear\"></i>&nbsp;Config\n\t\t\t\t\t</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<div className=\"d-flex flex-column\">\n\t\t\t\t\t\t<InputGroup>\n\t\t\t\t\t\t\t<InputGroup.Prepend>\n\t\t\t\t\t\t\t\t<InputGroup.Text>\n\t\t\t\t\t\t\t\t\t<i className=\"bi bi-link-45deg\"></i>&nbsp;Server URL\n\t\t\t\t\t\t\t\t</InputGroup.Text>\n\t\t\t\t\t\t\t</InputGroup.Prepend>\n\t\t\t\t\t\t\t<FormControl placeholder=\"https://middleman-server.com\" name=\"serverUrl\" value={localConfigHolder.serverUrl} onChange={handleConfigChanged} aria-label=\"Server URL\" />\n\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<InputGroup>\n\t\t\t\t\t\t\t<InputGroup.Prepend>\n\t\t\t\t\t\t\t\t<InputGroup.Text>\n\t\t\t\t\t\t\t\t\t<i className=\"bi bi-envelope\"></i>&nbsp;Your Mail ID\n\t\t\t\t\t\t\t\t</InputGroup.Text>\n\t\t\t\t\t\t\t</InputGroup.Prepend>\n\t\t\t\t\t\t\t<FormControl type=\"email\" placeholder=\"me@gmail.com\" name=\"userMailId\" value={localConfigHolder.userMailId} onChange={handleConfigChanged} aria-label=\"Server URL\" />\n\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t</div>\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button variant=\"danger\" onClick={handleClose}>\n\t\t\t\t\t\t<i className=\"bi bi-x-circle\"></i>&nbsp;Close\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button variant=\"success\" onClick={handleSave}>\n\t\t\t\t\t\t<i className=\"bi bi-save\"></i>&nbsp;Save\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t</React.Fragment>\n\t);\n}\nexport default Config;\n","import \"../css/navbar.css\";\nimport React from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport About from \"./About\";\nimport Config from \"./Config\";\n\nfunction Navigation() {\n\treturn (\n\t\t<div>\n\t\t\t<Navbar bg=\"light\" expand=\"lg\">\n\t\t\t\t<Navbar.Brand>Middleman</Navbar.Brand>\n\t\t\t\t<Navbar.Toggle aria-controls=\"jsc-navbar\" />\n\t\t\t\t<Navbar.Collapse id=\"jsc-navbar\">\n\t\t\t\t\t<Nav className=\"mr-auto\">\n\t\t\t\t\t\t<About />\n\t\t\t\t\t\t<Config />\n\t\t\t\t\t</Nav>\n\t\t\t\t</Navbar.Collapse>\n\t\t\t</Navbar>\n\t\t\t{/* This line is to make an AJAX call to the counter update function. This will just increment the counter in the background */}\n\t\t\t<img src=\"https://www.freevisitorcounters.com/en/home/counter/836517/t/0\" style={{ display: \"none\" }} alt=\"Visitor Counter\"></img>\n\t\t</div>\n\t);\n}\n\nexport default Navigation;\n","import axios from \"axios\";\nclass DownloadService {\n\tdownloadFile(serverUrl, downloadUrl) {\n\t\treturn axios.get(serverUrl + \"/download?downloadUrl=\" + downloadUrl);\n\t}\n\n\tgetExistingDownloads(serverUrl) {\n\t\tif (serverUrl !== \"\") return axios.get(serverUrl + \"/api/middlemanDocs?size=100\");\n\t}\n\n\tdeleteFile(serverUrl, fileId) {\n\t\tif (serverUrl !== \"\") return axios.delete(serverUrl + \"/api/middlemanDocs/\" + fileId);\n\t}\n}\n\nexport default new DownloadService();\n","import React, { useState, useContext } from \"react\";\nimport { InputGroup, FormControl, Button } from \"react-bootstrap\";\nimport DownloadService from \"../services/DownloadService\";\nimport { ConfigContext } from \"../contexts/ConfigContext\";\nimport { loadProgressBar } from \"axios-progress-bar\";\nimport \"axios-progress-bar/dist/nprogress.css\";\n\nconst Downloader = () => {\n\tconst [downloadUrl, setDownloadUrl] = useState(\"\");\n\tconst [configs] = useContext(ConfigContext);\n\n\tconst handleDownloadUrlChanged = (e) => {\n\t\tsetDownloadUrl(e.target.value);\n\t};\n\n\tconst handleDownloadClicked = () => {\n\t\tif (downloadUrl !== \"\") {\n\t\t\tloadProgressBar();\n\t\t\tDownloadService.downloadFile(configs.serverUrl, downloadUrl)\n\t\t\t\t.then(() => {\n\t\t\t\t\t//if download was successful\n\t\t\t\t\tsetDownloadUrl(\"\");\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\t//if download failed\n\t\t\t\t\talert(\"Sorry, an error occured: \" + err);\n\t\t\t\t});\n\t\t} else {\n\t\t\talert(\"Please enter a download URL\");\n\t\t}\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<h5>Cache files to Middleman</h5>\n\t\t\t<InputGroup>\n\t\t\t\t<InputGroup.Prepend>\n\t\t\t\t\t<InputGroup.Text>\n\t\t\t\t\t\t<i className=\"bi bi-link-45deg\"></i>\n\t\t\t\t\t</InputGroup.Text>\n\t\t\t\t</InputGroup.Prepend>\n\t\t\t\t<FormControl placeholder=\"Download URL\" value={downloadUrl} onChange={handleDownloadUrlChanged} aria-label=\"Download URL\" />\n\t\t\t\t<InputGroup.Append>\n\t\t\t\t\t<Button onClick={handleDownloadClicked} type=\"submit\">\n\t\t\t\t\t\t<i className=\"bi bi-download\"></i>&nbsp;Cache to Middleman\n\t\t\t\t\t</Button>\n\t\t\t\t</InputGroup.Append>\n\t\t\t</InputGroup>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default Downloader;\n","import { useContext, useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { ConfigContext } from \"../contexts/ConfigContext\";\nimport DownloadService from \"../services/DownloadService\";\n\nconst ExistingDownload = (props) => {\n\tconst [configs] = useContext(ConfigContext);\n\n\tconst [existingDownload, setExistingDownload] = useState([]);\n\n\tuseEffect(() => {\n\t\tsetExistingDownload(props.item);\n\t}, [props.item]);\n\n\tconst getRowColorClassName = () => {\n\t\tif (existingDownload.status === \"done\") return \"table-success\";\n\t\tif (existingDownload.status === \"in progress\") return \"table-warning\";\n\t\tif (existingDownload.status === \"error\") return \"table-danger\";\n\t};\n\n\tconst getButtonsDisabledStatus = () => {\n\t\tif (existingDownload.status === \"done\") return false;\n\t\treturn true;\n\t};\n\n\tconst downloadFileFromMiddleman = () => {\n\t\twindow.open(existingDownload.middlemanUrl);\n\t};\n\n\tconst deleteFileFromMiddleman = () => {\n\t\tDownloadService.deleteFile(configs.serverUrl, existingDownload.id);\n\t};\n\n\treturn (\n\t\t<tr className={getRowColorClassName()}>\n\t\t\t<td>\n\t\t\t\t<a href={existingDownload.downloadUrl}>{existingDownload.downloadUrl}</a>\n\t\t\t</td>\n\t\t\t<td>{existingDownload.status}</td>\n\t\t\t<td>\n\t\t\t\t<Button variant=\"success\" disabled={getButtonsDisabledStatus()} onClick={downloadFileFromMiddleman}>\n\t\t\t\t\t<i className=\"bi bi-download\"></i>&nbsp;Download\n\t\t\t\t</Button>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<Button variant=\"danger\" disabled={getButtonsDisabledStatus()} onClick={deleteFileFromMiddleman}>\n\t\t\t\t\t<i className=\"bi bi-trash\"></i>&nbsp;Delete\n\t\t\t\t</Button>\n\t\t\t</td>\n\t\t</tr>\n\t);\n};\n\nexport default ExistingDownload;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Accordion, Row, Col, Button, Table } from \"react-bootstrap\";\nimport { ConfigContext } from \"../contexts/ConfigContext\";\nimport DownloadService from \"../services/DownloadService\";\nimport ExistingDownload from \"./ExistingDownload\";\n\nconst ExistingDownloads = () => {\n\t/**\n\t * Get configs from the Global Context\n\t */\n\tconst [configs] = useContext(ConfigContext);\n\n\t/**\n\t * The state which stores the existing downloads as an array\n\t */\n\tconst [existingDownloads, setExistingDownloads] = useState([]);\n\n\t/**\n\t * The funtion that makes an AJAX call to the server and gets the existing downloads as JSON\n\t */\n\tconst fetchExisting = () => {\n\t\tif (configs.serverUrl) {\n\t\t\tDownloadService.getExistingDownloads(configs.serverUrl).then((response) => {\n\t\t\t\tsetExistingDownloads(response.data._embedded.middlemanDocs);\n\t\t\t});\n\t\t}\n\t};\n\n\t/**\n\t * The existing downloads must be fetched every time the serverUrl updates\n\t */\n\tuseEffect(fetchExisting, [configs.serverUrl]);\n\n\t/**\n\t * This function helps with rendering the output on the UI based on whether there are existing downloads or not\n\t */\n\tconst validateExistingDownloads = () => {\n\t\tif (existingDownloads.length !== 0) {\n\t\t\treturn existingDownloads.map((aDownload) => <ExistingDownload item={aDownload} key={aDownload.id} />);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<tr>\n\t\t\t\t\t<td colSpan={4}>No results found. Try fetching again.</td>\n\t\t\t\t</tr>\n\t\t\t);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Accordion defaultActiveKey=\"0\">\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<h5>Files in Middleman</h5>\n\t\t\t\t</Col>\n\t\t\t\t<Col>\n\t\t\t\t\t<Button variant=\"warning\" onClick={fetchExisting} className=\"float-end\">\n\t\t\t\t\t\t<i className=\"bi bi-arrow-repeat\"></i> Fetch\n\t\t\t\t\t</Button>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<Table striped bordered hover>\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>Original Download URL</th>\n\t\t\t\t\t\t\t<th>Status</th>\n\t\t\t\t\t\t\t<th>Download from Middleman</th>\n\t\t\t\t\t\t\t<th>Delete from Middleman</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>{validateExistingDownloads()}</tbody>\n\t\t\t\t</Table>\n\t\t\t</Row>\n\t\t</Accordion>\n\t);\n};\n\nexport default ExistingDownloads;\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport \"animate.css/animate.min.css\";\nimport { Container } from \"react-bootstrap\";\nimport Navigation from \"./components/Navigation\";\nimport Downloader from \"./components/Downloader\";\nimport ExistingDownloads from \"./components/ExistingDownloads\";\nimport { ConfigProvider } from \"./contexts/ConfigContext\";\n\nfunction App() {\n\treturn (\n\t\t<Container>\n\t\t\t<ConfigProvider>\n\t\t\t\t<Navigation />\n\t\t\t\t<Downloader />\n\t\t\t\t<hr />\n\t\t\t\t<ExistingDownloads />\n\t\t\t</ConfigProvider>\n\t\t</Container>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}