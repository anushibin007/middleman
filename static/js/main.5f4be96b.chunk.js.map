{"version":3,"sources":["components/About.js","utils/Constants.js","contexts/ConfigContext.js","components/Config.js","components/Navigation.js","services/DownloadService.js","components/Downloader.js","components/ExistingDownload.js","components/ExistingDownloads.js","App.js","reportWebVitals.js","index.js"],"names":["About","useState","show","setShow","handleClose","Fragment","Button","variant","onClick","className","Modal","onHide","Header","Title","Body","href","src","border","alt","Footer","Constants","LOCALSTORAGE_CONFIG_KEY","SERVER_URL","process","ConfigContext","createContext","ConfigProvider","props","userMailId","configs","setConfigs","useEffect","stateFromLocalStorage","localStorage","getItem","JSON","parse","setItem","stringify","Provider","value","children","Config","useContext","localConfigHolder","setLocalConfigHolder","InputGroup","Prepend","Text","FormControl","type","placeholder","name","onChange","e","target","aria-label","Navigation","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","style","display","fileUrl","axios","get","fileId","a","then","toast","warning","error","Downloader","setFileUrl","Append","loadProgressBar","success","DownloadService","uploadFile","catch","err","ExistingDownload","existingDownload","setExistingDownload","item","getButtonsDisabledStatus","status","downloadFileFromMiddleman","window","open","middlemanUrl","retryDownload","downloadUrl","disabled","deleteFile","ExistingDownloads","existingDownloads","setExistingDownloads","Accordion","defaultActiveKey","Row","Col","getExistingDownloads","response","data","_embedded","middlemanDocs","Table","striped","bordered","hover","responsive","length","map","aDownload","colSpan","App","Darkmode","label","autoMatchOsTheme","showWidget","Container","position","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f4be96b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport \"../css/heart.css\";\n\nfunction About() {\n\tconst [show, setShow] = useState(false);\n\n\tconst handleClose = () => setShow(false);\n\tconst handleShow = () => setShow(true);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Button variant=\"navbar-btn\" onClick={handleShow}>\n\t\t\t\t<i className=\"bi bi-person\"></i>&nbsp;About Me\n\t\t\t</Button>\n\n\t\t\t<Modal show={show} onHide={handleClose}>\n\t\t\t\t<Modal.Header>\n\t\t\t\t\t<Modal.Title>\n\t\t\t\t\t\t<i className=\"bi bi-person\"></i>&nbsp;About Me\n\t\t\t\t\t</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<div className=\"d-flex flex-column\">\n\t\t\t\t\t\t<div className=\"d-flex justify-content-center\">\n\t\t\t\t\t\t\tDesigned & Developed with <span className=\"heart animate__animated animate__heartBeat animate__infinite px-1\">â™¥</span> by{\" \"}\n\t\t\t\t\t\t\t<a className=\"px-1\" href=\"https://github.com/anushibin007/middleman\">\n\t\t\t\t\t\t\t\tAnu Shibin Joseph Raj\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<div className=\"d-flex justify-content-center\">\n\t\t\t\t\t\t\t{/* This line shows the actual counter */}\n\t\t\t\t\t\t\t<img src=\"https://www.freevisitorcounters.com/en/counter/render/842593/t/0\" border=\"0\" className=\"counterimg\" alt=\"Visitor Counter\"></img>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button variant=\"info\" onClick={handleClose}>\n\t\t\t\t\t\tClose\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t</React.Fragment>\n\t);\n}\nexport default About;\n","const Constants = {\n\tLOCALSTORAGE_CONFIG_KEY: \"MIDDLEMAN_SERVER_URL_KEY\",\n\tSERVER_URL: process.env.SERVER_URL || \"https://us-central1-middleman-e3e91.cloudfunctions.net\",\n};\n\nexport default Constants;\n","import React, { createContext, useEffect, useState } from \"react\";\nimport Constants from \"../utils/Constants\";\n\nexport const ConfigContext = createContext();\n\nexport const ConfigProvider = (props) => {\n\tconst [configs, setConfigs] = useState({ userMailId: \"\" });\n\t/**\n\t * Try to load the configs for the first time from local storage\n\t */\n\tuseEffect(() => {\n\t\tconst stateFromLocalStorage = localStorage.getItem(Constants.LOCALSTORAGE_CONFIG_KEY);\n\t\tif (stateFromLocalStorage) {\n\t\t\tsetConfigs(JSON.parse(stateFromLocalStorage));\n\t\t}\n\t}, []);\n\n\t/**\n\t * Every time the config changes, store it to local storage\n\t */\n\tuseEffect(() => {\n\t\tlocalStorage.setItem(Constants.LOCALSTORAGE_CONFIG_KEY, JSON.stringify(configs));\n\t}, [configs]);\n\n\treturn <ConfigContext.Provider value={[configs, setConfigs]}>{props.children}</ConfigContext.Provider>;\n};\n","import React, { useState, useContext } from \"react\";\nimport { Button, Modal, InputGroup, FormControl } from \"react-bootstrap\";\nimport \"../css/heart.css\";\nimport { ConfigContext } from \"../contexts/ConfigContext\";\n\nfunction Config() {\n\t/**\n\t * Get the config from the global context\n\t */\n\tconst [configs, setConfigs] = useContext(ConfigContext);\n\n\t/**\n\t * State that holds whether the modal is shown or not\n\t */\n\tconst [show, setShow] = useState(false);\n\n\t/**\n\t * Use a local variable to store the configuration. This will be permanently written to the context variable only when clicking \"Save\"\n\t */\n\tconst [localConfigHolder, setLocalConfigHolder] = useState({});\n\n\t/**\n\t * Closing the Config Modal\n\t */\n\tconst handleClose = () => setShow(false);\n\n\t/**\n\t * Opening the Config Modal. This will also copy the configs from the global context into the local variable\n\t */\n\tconst handleShow = () => {\n\t\tsetLocalConfigHolder({ ...configs });\n\t\tsetShow(true);\n\t};\n\n\t/**\n\t * Whenever the config is updated on the UI, just store it into the local variable.\n\t * Wait till the Save button is clicked. Then copy it to the global context.\n\t */\n\tconst handleConfigChanged = (e) => {\n\t\tsetLocalConfigHolder({ ...configs, [e.target.name]: e.target.value });\n\t};\n\n\t/**\n\t * Save the local config into the Global Context\n\t */\n\tconst handleSave = () => {\n\t\tsetConfigs(localConfigHolder);\n\t\thandleClose();\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Button variant=\"navbar-btn\" onClick={handleShow}>\n\t\t\t\t<i className=\"bi bi-gear\"></i>&nbsp;Config\n\t\t\t</Button>\n\n\t\t\t<Modal show={show} onHide={handleClose}>\n\t\t\t\t<Modal.Header>\n\t\t\t\t\t<Modal.Title>\n\t\t\t\t\t\t<i className=\"bi bi-gear\"></i>&nbsp;Config\n\t\t\t\t\t</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<div className=\"d-flex flex-column\">\n\t\t\t\t\t\t<InputGroup>\n\t\t\t\t\t\t\t<InputGroup.Prepend>\n\t\t\t\t\t\t\t\t<InputGroup.Text>\n\t\t\t\t\t\t\t\t\t<i className=\"bi bi-envelope\"></i>&nbsp;Your Mail ID\n\t\t\t\t\t\t\t\t</InputGroup.Text>\n\t\t\t\t\t\t\t</InputGroup.Prepend>\n\t\t\t\t\t\t\t<FormControl type=\"email\" placeholder=\"me@gmail.com\" name=\"userMailId\" value={localConfigHolder.userMailId} onChange={handleConfigChanged} aria-label=\"Server URL\" />\n\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t</div>\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button variant=\"danger\" onClick={handleClose}>\n\t\t\t\t\t\t<i className=\"bi bi-x-circle\"></i>&nbsp;Close\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button variant=\"success\" onClick={handleSave}>\n\t\t\t\t\t\t<i className=\"bi bi-save\"></i>&nbsp;Save\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t</React.Fragment>\n\t);\n}\nexport default Config;\n","import \"../css/navbar.css\";\nimport React from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport About from \"./About\";\nimport Config from \"./Config\";\n\nfunction Navigation() {\n\treturn (\n\t\t<div>\n\t\t\t<Navbar bg=\"light\" expand=\"lg\">\n\t\t\t\t<Navbar.Brand>Middleman</Navbar.Brand>\n\t\t\t\t<Navbar.Toggle aria-controls=\"jsc-navbar\" />\n\t\t\t\t<Navbar.Collapse id=\"jsc-navbar\">\n\t\t\t\t\t<Nav className=\"mr-auto\">\n\t\t\t\t\t\t<About />\n\t\t\t\t\t\t<Config />\n\t\t\t\t\t</Nav>\n\t\t\t\t</Navbar.Collapse>\n\t\t\t</Navbar>\n\t\t\t{/* This line is to make an AJAX call to the counter update function. This will just increment the counter in the background */}\n\t\t\t<img src=\"https://www.freevisitorcounters.com/en/home/counter/842593/t/0\" style={{ display: \"none\" }} alt=\"Visitor Counter\"></img>\n\t\t</div>\n\t);\n}\n\nexport default Navigation;\n","import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport Constants from \"../utils/Constants\";\n\nclass DownloadService {\n\tuploadFile(fileUrl) {\n\t\treturn axios.get(Constants.SERVER_URL + \"/upload?fileUrl=\" + fileUrl);\n\t}\n\n\tgetExistingDownloads() {\n\t\treturn axios.get(Constants.SERVER_URL + \"/api/middlemanDocs?size=100\");\n\t}\n\n\tasync deleteFile(fileId) {\n\t\treturn axios.get(Constants.SERVER_URL + \"/delete?id=\" + fileId).then(() => {\n\t\t\ttoast.warning(\"ðŸ§¯ File deleted from middleman cache\");\n\t\t});\n\t}\n\n\tshowErrorMessage() {\n\t\ttoast.error('ðŸ’” The \"Server URL\" cannot be empty. Please specify one in the Config');\n\t}\n}\n\nexport default new DownloadService();\n","import React, { useState } from \"react\";\nimport { InputGroup, FormControl, Button } from \"react-bootstrap\";\nimport DownloadService from \"../services/DownloadService\";\nimport { loadProgressBar } from \"axios-progress-bar\";\nimport \"axios-progress-bar/dist/nprogress.css\";\nimport { toast } from \"react-toastify\";\n\nconst Downloader = () => {\n\tconst [fileUrl, setFileUrl] = useState(\"\");\n\n\tconst handleDownloadUrlChanged = (e) => {\n\t\tsetFileUrl(e.target.value);\n\t};\n\n\tconst handleDownloadClicked = () => {\n\t\tif (fileUrl) {\n\t\t\tloadProgressBar();\n\t\t\tsetFileUrl(\"\");\n\t\t\ttoast.success(\"âœ… Download queued. Refresh to see the progress\");\n\t\t\tDownloadService.uploadFile(fileUrl)\n\t\t\t\t.then(() => {\n\t\t\t\t\t//if download was successful\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\t//if download failed\n\t\t\t\t\ttoast.error(\"ðŸ˜¢ Sorry, an error occured: \" + err);\n\t\t\t\t});\n\t\t} else {\n\t\t\ttoast.error(\"ðŸ’” Download URL cannot be empty\");\n\t\t}\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<h5>Cache files to Middleman</h5>\n\t\t\t<InputGroup>\n\t\t\t\t<InputGroup.Prepend>\n\t\t\t\t\t<InputGroup.Text>\n\t\t\t\t\t\t<i className=\"bi bi-link-45deg\"></i>\n\t\t\t\t\t</InputGroup.Text>\n\t\t\t\t</InputGroup.Prepend>\n\t\t\t\t<FormControl placeholder=\"Download URL\" value={fileUrl} onChange={handleDownloadUrlChanged} aria-label=\"Download URL\" />\n\t\t\t\t<InputGroup.Append>\n\t\t\t\t\t<Button onClick={handleDownloadClicked} type=\"submit\">\n\t\t\t\t\t\t<i className=\"bi bi-download\"></i>&nbsp;Cache to Middleman\n\t\t\t\t\t</Button>\n\t\t\t\t</InputGroup.Append>\n\t\t\t</InputGroup>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default Downloader;\n","import { useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { toast } from \"react-toastify\";\nimport DownloadService from \"../services/DownloadService\";\n\nconst ExistingDownload = (props) => {\n\tconst [existingDownload, setExistingDownload] = useState([]);\n\n\tuseEffect(() => {\n\t\tsetExistingDownload(props.item);\n\t}, [props.item]);\n\n\tconst getRowColorClassName = () => {\n\t\tif (existingDownload.status === \"done\") return \"table-success\";\n\t\tif (existingDownload.status === \"in progress\") return \"table-warning\";\n\t\tif (existingDownload.status === \"error\") return \"table-danger\";\n\t};\n\n\tconst getButtonsDisabledStatus = () => {\n\t\tif (existingDownload.status === \"done\" || existingDownload.status === \"error\") return false;\n\t\treturn true;\n\t};\n\n\tconst downloadFileFromMiddleman = () => {\n\t\twindow.open(existingDownload.middlemanUrl);\n\t};\n\n\tconst deleteFileFromMiddleman = () => {\n\t\tDownloadService.deleteFile(existingDownload.id);\n\t};\n\n\tconst getExistingDownloadUrl = () => {\n\t\tif (existingDownload.status === \"error\") {\n\t\t\treturn existingDownload.downloadUrl;\n\t\t} else {\n\t\t\treturn <a href={existingDownload.downloadUrl}>{existingDownload.downloadUrl}</a>;\n\t\t}\n\t};\n\n\tconst retryDownload = () => {\n\t\ttoast(\"ðŸš€ Still under Development. Stay Tuned!\");\n\t};\n\n\tconst getDownloadOrRetryButton = () => {\n\t\tif (existingDownload.status === \"error\") {\n\t\t\treturn (\n\t\t\t\t<Button variant=\"warning\" disabled={getButtonsDisabledStatus()} onClick={retryDownload}>\n\t\t\t\t\t<i className=\"bi bi-download\"></i>&nbsp;Retry\n\t\t\t\t</Button>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<Button variant=\"success\" disabled={getButtonsDisabledStatus()} onClick={downloadFileFromMiddleman}>\n\t\t\t\t\t<i className=\"bi bi-download\"></i>&nbsp;Download\n\t\t\t\t</Button>\n\t\t\t);\n\t\t}\n\t};\n\n\treturn (\n\t\t<tr className={getRowColorClassName()}>\n\t\t\t<td>{getExistingDownloadUrl()}</td>\n\t\t\t<td>{existingDownload.status}</td>\n\t\t\t<td>{getDownloadOrRetryButton()}</td>\n\t\t\t<td>\n\t\t\t\t<Button variant=\"danger\" disabled={getButtonsDisabledStatus()} onClick={deleteFileFromMiddleman}>\n\t\t\t\t\t<i className=\"bi bi-trash\"></i>&nbsp;Delete\n\t\t\t\t</Button>\n\t\t\t</td>\n\t\t</tr>\n\t);\n};\n\nexport default ExistingDownload;\n","import React, { useState } from \"react\";\nimport { Accordion, Row, Col, Button, Table } from \"react-bootstrap\";\nimport DownloadService from \"../services/DownloadService\";\nimport ExistingDownload from \"./ExistingDownload\";\nimport { toast } from \"react-toastify\";\n\nconst ExistingDownloads = () => {\n\t/**\n\t * The state which stores the existing downloads as an array\n\t */\n\tconst [existingDownloads, setExistingDownloads] = useState([]);\n\n\t/**\n\t * The funtion that makes an AJAX call to the server and gets the existing downloads as JSON\n\t */\n\tconst fetchExisting = () => {\n\t\tDownloadService.getExistingDownloads()\n\t\t\t.then((response) => {\n\t\t\t\tsetExistingDownloads(response.data._embedded.middlemanDocs);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\ttoast.error(\"ðŸ˜¢ Sorry, an error occured: \" + err);\n\t\t\t});\n\t};\n\n\t/**\n\t * This function helps with rendering the output on the UI based on whether there are existing downloads or not\n\t */\n\tconst validateExistingDownloads = () => {\n\t\tif (existingDownloads.length !== 0) {\n\t\t\treturn existingDownloads.map((aDownload) => <ExistingDownload item={aDownload} key={aDownload.id} />);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<tr>\n\t\t\t\t\t<td colSpan={4}>No results found. Try fetching again.</td>\n\t\t\t\t</tr>\n\t\t\t);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Accordion defaultActiveKey=\"0\">\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<h5>Files in Middleman</h5>\n\t\t\t\t</Col>\n\t\t\t\t<Col>\n\t\t\t\t\t<Button variant=\"warning\" onClick={fetchExisting} className=\"float-end\">\n\t\t\t\t\t\t<i className=\"bi bi-arrow-repeat\"></i> Refresh\n\t\t\t\t\t</Button>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<Table striped bordered hover responsive>\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>Original Download URL</th>\n\t\t\t\t\t\t\t<th>Status</th>\n\t\t\t\t\t\t\t<th>Download from Middleman</th>\n\t\t\t\t\t\t\t<th>Delete from Middleman</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>{validateExistingDownloads()}</tbody>\n\t\t\t\t</Table>\n\t\t\t</Row>\n\t\t</Accordion>\n\t);\n};\n\nexport default ExistingDownloads;\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport \"animate.css/animate.min.css\";\nimport { Container } from \"react-bootstrap\";\nimport Navigation from \"./components/Navigation\";\nimport Downloader from \"./components/Downloader\";\nimport ExistingDownloads from \"./components/ExistingDownloads\";\nimport { ConfigProvider } from \"./contexts/ConfigContext\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Darkmode from \"darkmode-js\";\n\nfunction App() {\n\t/**\n\t * Dark Mode Stuff\n\t */\n\tconst darkModeoptions = {\n\t\tlabel: \"ðŸŒ“\", // default: ''\n\t\tautoMatchOsTheme: false, // default was true. But it had some glitches. So I disabled it\n\t};\n\tnew Darkmode(darkModeoptions).showWidget();\n\n\t/**\n\t * Rest of the App\n\t */\n\treturn (\n\t\t<Container>\n\t\t\t<ConfigProvider>\n\t\t\t\t<Navigation />\n\t\t\t\t<br />\n\t\t\t\t<Downloader />\n\t\t\t\t<hr />\n\t\t\t\t<ExistingDownloads />\n\t\t\t</ConfigProvider>\n\t\t\t<ToastContainer position=\"bottom-right\" />\n\t\t</Container>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}